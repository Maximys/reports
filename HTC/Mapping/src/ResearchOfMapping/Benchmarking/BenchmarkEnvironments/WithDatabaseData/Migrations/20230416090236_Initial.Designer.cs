// <auto-generated />
using System;
using System.Collections.Generic;
using Benchmarking.BenchmarkEnvironments.WithDatabaseData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Benchmarking.BenchmarkEnvironments.WithDatabaseData.Migrations
{
    [DbContext(typeof(BenchmarkWithDatabaseDataContext))]
    [Migration("20230416090236_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Benchmarking.Entities.Source.Foo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Doublen")
                        .HasColumnType("double precision");

                    b.Property<float>("Floatn")
                        .HasColumnType("real");

                    b.Property<long?>("Foo1Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Int32")
                        .HasColumnType("integer");

                    b.Property<long>("Int64")
                        .HasColumnType("bigint");

                    b.Property<List<int>>("IntArr")
                        .HasColumnType("integer[]");

                    b.Property<List<int>>("Ints")
                        .HasColumnType("integer[]");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("NullInt")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Foo1Id");

                    b.ToTable("Foos");
                });

            modelBuilder.Entity("Benchmarking.Entities.Source.InnerFoo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("FooId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FooId1")
                        .HasColumnType("bigint");

                    b.Property<int>("Int32")
                        .HasColumnType("integer");

                    b.Property<long>("Int64")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("NullInt")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FooId");

                    b.HasIndex("FooId1");

                    b.ToTable("InnerFoo");
                });

            modelBuilder.Entity("Benchmarking.Entities.Source.Foo", b =>
                {
                    b.HasOne("Benchmarking.Entities.Source.InnerFoo", "Foo1")
                        .WithMany()
                        .HasForeignKey("Foo1Id");

                    b.Navigation("Foo1");
                });

            modelBuilder.Entity("Benchmarking.Entities.Source.InnerFoo", b =>
                {
                    b.HasOne("Benchmarking.Entities.Source.Foo", null)
                        .WithMany("FooArr")
                        .HasForeignKey("FooId");

                    b.HasOne("Benchmarking.Entities.Source.Foo", null)
                        .WithMany("Foos")
                        .HasForeignKey("FooId1");
                });

            modelBuilder.Entity("Benchmarking.Entities.Source.Foo", b =>
                {
                    b.Navigation("FooArr");

                    b.Navigation("Foos");
                });
#pragma warning restore 612, 618
        }
    }
}
